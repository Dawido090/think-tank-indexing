version: '3'

services:
  minio:
    build:
      context: "./minio"
      dockerfile: "minio.dockerfile"
    container_name: minio-raw
    image: "quay.io/minio/minio:RELEASE.2022-07-24T17-09-31Z"
    volumes:
      - minio:/data
    ports:
      - 9000:9000
      - 9001:9001
    # environment:
    #   MINIO_ROOT_USER: "minioadmin"
    #   MINIO_ROOT_PASSWORD: "minioadmin"
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.3.1
    container_name: elasticsearch
    environment:
      - node.name=ws-es-node
      - discovery.type=single-node
      - cluster.name=ws-es-data-cluster
      - bootstrap.memory_lock=true
      # - ES_JAVA_OPTS="-Xms1024m -Xmx1024m"
      # - xpack.security.enabled='false'
      # - xpack.monitoring.enabled='false'
      # - xpack.watcher.enabled='false'
      # - xpack.ml.enabled='false'
      # - http.cors.enabled='true'
      # - http.cors.allow-origin="*"
      # - http.cors.allow-methods=OPTIONS, HEAD, GET, POST, PUT, DELETE
      # - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type, Content-Length
      # - logger.level: debug
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elk:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - esnet
  kibana:
    image: docker.elastic.co/kibana/kibana:7.3.1
    container_name: kibana
    environment:
      SERVER_NAME: 127.0.0.1
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      # XPACK_GRAPH_ENABLED: false
      # XPACK_ML_ENABLED: false
      # XPACK_REPORTING_ENABLED: false
      # XPACK_SECURITY_ENABLED: false
      # XPACK_WATCHER_ENABLED: false
    ports:
      - "5601:5601"
    networks:
      - esnet
    depends_on:
      - elasticsearch
    restart: "unless-stopped"
  dagster-postgres:
    image: postgres:13.3
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=secret
    # volumes:
    #   - dagster-postgres:/var/lib/postgresql/data
  dagster-dagit:
    build:
      context: "./dagster"
      dockerfile: "dagster.dockerfile"
    container_name: dagster-dagit
    ports:
      - 3000:3000
    environment:
      - PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python
  dagster-daemon:
    build:
      context: "./dagster"
      dockerfile: "dagster.dockerfile"
    container_name: dagster-daemon
    command: "dagster-daemon run"
    environment:
      - PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python

volumes:
  elk:
    driver: local
  minio:
  # dagster-postgres:

networks:
  esnet:  
